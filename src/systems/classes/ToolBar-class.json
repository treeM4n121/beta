{
  "name": "ToolBar-class",
  "master": false,
  "version": "1.0.0",
  "description": "",
  "schemas": {
    "f1257f17deb16097": {
      "_name": "ToolBar",
      "items": "collection",
      "render": "method",
      "_id": "f1257f17deb16097",
      "_inherit": ["_Component"]
    },
    "t19b6b11ff31158d": {
      "_id": "t19b6b11ff31158d",
      "_name": "ToolBarItem",
      "_inherit": ["_Component"],
      "html": "link",
      "position": "property",
      "type": "property",
      "platform": "property",
      "render": "method",
      "click": "event"
    }
  },
  "models": {
    "l129a713e681c903": {
      "_name": "ToolBar",
      "items": {
        "type": ["ToolBarItem"],
        "readOnly": false,
        "mandatory": false,
        "default": []
      },
      "render": {},
      "_id": "l129a713e681c903"
    },
    "u1f4c7177bb1a459": {
      "_name": "ToolBarItem",
      "html": {
        "type": "HTML",
        "readOnly": false,
        "mandatory": false,
        "default": ""
      },
      "position": {
        "type": "number",
        "readOnly": false,
        "mandatory": false,
        "default": 0
      },
      "type": {
        "type": "editorType",
        "readOnly": false,
        "mandatory": false,
        "default": "designer"
      },
      "render": {},
      "click": {},
      "_id": "u1f4c7177bb1a459",
      "platform": {
        "type": "platform",
        "readOnly": false,
        "mandatory": false,
        "default": "all"
      }
    }
  },
  "behaviors": {
    "n12d44154da1020f": {
      "_id": "n12d44154da1020f",
      "component": "ToolBar",
      "state": "render",
      "action": "function render() { \n  var domItems = document.getElementById('designer-toolbar-items'),\n    i = 0,\n    length = 0,\n    item = null,\n    toolBarItems = [],\n    platformToolBarItems = [],\n    platform = '',\n    self = this;\n    \n  // empty\n  $('#designer-toolbar-items').empty();\n  this.items([]);\n\n  // get items\n  toolBarItems = this.require('db').collections().ToolBarItem.find({\n    'type': this.require('state').type(),\n    'platform': 'all'\n  });\n  \n  // get platform specific items\n  switch (true) {\n    case this.require('designer').isElectron() === true:\n      platform = 'electron';\n      break;\n    case this.require('designer').isCordova() === true:\n      platform = 'cordova';\n      break;\n    default:\n      platform = 'web';\n      break;\n  }\n  \n  platformToolBarItems = this.require('db').collections().ToolBarItem.find({\n    'type': this.require('state').type(),\n    'platform': platform\n  });\n  \n  toolBarItems = toolBarItems.concat(platformToolBarItems);\n\n  // sort items\n  toolBarItems.sort(function (itemA, itemB) {\n    if (itemA.position > itemB.position) {\n      return 1;\n    }\n    if (itemA.position < itemB.position) {\n      return -1;\n    }\n    return 0;\n  });\n\n  toolBarItems.forEach(function (toolBarItem) {\n    var id = toolBarItem._id;\n    self.items().push(self.require(id));\n  });\n\n  // render items\n  this.items().forEach(function (item) {\n    domItems.insertAdjacentHTML('beforeend', '<li>' + item.html().source() + '</>');\n  });\n\n  // add events\n  length = domItems.children.length;\n  for (i = 0; i < length; i++) {\n    item = domItems.children[i];\n    item.addEventListener('click', function () {\n      this.click();\n    }.bind(self.items(i)));\n  }\n}",
      "useCoreAPI": false,
      "core": false
    }
  },
  "types": {
    "platform": {
      "_id": "r10214160211309c",
      "name": "platform",
      "type": "string",
      "value": ["all", "web", "electron", "cordova"]
    }
  },
  "components": {
    "ToolBar": {
      "toolbar": {
        "_id": "toolbar",
        "items": []
      }
    }
  },
  "_id": "o1a37519ca718bc4"
}
