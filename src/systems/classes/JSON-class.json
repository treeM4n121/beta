{
  "name": "JSON-class",
  "master": false,
  "version": "1.0.0",
  "description": "",
  "schemas": {
    "r1bacb1740a1fc45": {
      "_name": "JSON",
      "source": "property",
      "_id": "r1bacb1740a1fc45",
      "_inherit": ["_Component"],
      "platform": "property"
    }
  },
  "models": {
    "v1146f14eaa15324": {
      "_name": "JSON",
      "source": {
        "type": "json",
        "readOnly": true,
        "mandatory": true,
        "default": {}
      },
      "_id": "v1146f14eaa15324",
      "platform": {
        "type": "platform",
        "readOnly": false,
        "mandatory": false,
        "default": "all"
      }
    }
  },
  "behaviors": {},
  "types": {},
  "components": {
    "JSON": {
      "00-quickstart": {
        "_id": "00-quickstart",
        "platform": "all",
        "source": {
          "name": "quick-start",
          "master": true,
          "version": "1.5.0",
          "description": "Quick start\n\nThis system is taken from the quick start.",
          "schemas": {
            "154661fa5617782": {
              "_id": "154661fa5617782",
              "_name": "Jedi",
              "_inherit": ["_Component"],
              "firstName": "property",
              "lastName": "property",
              "father": "link",
              "fullName": "method"
            }
          },
          "models": {
            "1a3a2150b31c099": {
              "_id": "1a3a2150b31c099",
              "_name": "Jedi",
              "firstName": {
                "description": "first name of a Jedi",
                "type": "string",
                "readOnly": false,
                "mandatory": true,
                "default": ""
              },
              "lastName": {
                "description": "last name of a Jedi",
                "type": "string",
                "readOnly": false,
                "mandatory": true,
                "default": ""
              },
              "father": {
                "description": "father of a Jedi",
                "type": "Jedi",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "fullName": {
                "description": "full name of a Jedi",
                "result": "string"
              }
            }
          },
          "behaviors": {
            "137491d3c61213b": {
              "_id": "137491d3c61213b",
              "component": "100e51f87218a8f",
              "state": "start",
              "action": "function start() {\n  let luke = null,\n      logger = null;\n  \n  // get logger component\n  logger = this.require('logger');\n  \n  // get luke component\n  luke = this.require('luke');\n  \n  // get the name of the father of Luke\n  logger.info(luke.father().fullName());\n}",
              "useCoreAPI": false,
              "core": false
            },
            "11a2910bbd142e1": {
              "_id": "11a2910bbd142e1",
              "component": "Jedi",
              "state": "fullName",
              "action": "function fullName() {\n  const result = this.firstName() + ' ' + this.lastName();\n  return result;\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {},
          "components": {
            "Jedi": {
              "vader": {
                "_id": "vader",
                "father": "",
                "firstName": "Darth",
                "lastName": "Vader"
              },
              "luke": {
                "_id": "luke",
                "father": "vader",
                "firstName": "Luke",
                "lastName": "Skywalker"
              }
            }
          },
          "_id": "100e51f87218a8f"
        }
      },
      "01-book-collection": {
        "_id": "01-book-collection",
        "platform": "all",
        "source": {
          "name": "book-collection",
          "master": true,
          "version": "1.5.0",
          "description": "Create a Book collection manager\n\nThis system shows a list of books and an input to filter on that list.\n\nnote: if you create a Book Component when running the application, the list will be automatically updated",
          "schemas": {
            "z198ba11ccf1a29b": {
              "_id": "z198ba11ccf1a29b",
              "_name": "Template",
              "_inherit": ["_Component"],
              "source": "property",
              "render": "method"
            },
            "l1f8dd1f44d1ef53": {
              "_id": "l1f8dd1f44d1ef53",
              "_name": "CSS",
              "_inherit": ["_Component"],
              "source": "property",
              "render": "method"
            },
            "l1cbef1eb531773c": {
              "_id": "l1cbef1eb531773c",
              "_name": "List",
              "_inherit": ["_Component"],
              "filter": "property",
              "render": "method"
            },
            "j1ca8314c081d9de": {
              "_id": "j1ca8314c081d9de",
              "_name": "Book",
              "_inherit": ["_Component"],
              "name": "property",
              "year": "property",
              "author": "link"
            },
            "k1d43e1430e1af90": {
              "_id": "k1d43e1430e1af90",
              "_name": "Author",
              "_inherit": ["_Component"],
              "firstName": "property",
              "lastName": "property",
              "fullName": "method"
            }
          },
          "models": {
            "o19b04191b513cf7": {
              "_id": "o19b04191b513cf7",
              "_name": "Template",
              "source": {
                "description": "html of the template",
                "type": "html",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "render": {
                "description": "render the template",
                "params": [
                  {
                    "name": "elt",
                    "type": "DOMElement",
                    "mandatory": false,
                    "default": null
                  }
                ]
              }
            },
            "z128c91df861dc34": {
              "_id": "z128c91df861dc34",
              "_name": "CSS",
              "source": {
                "description": "css of the component",
                "type": "css",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "render": { "description": "render the component" }
            },
            "p1b9fa10ca51e9d4": {
              "_id": "p1b9fa10ca51e9d4",
              "_name": "List",
              "render": { "description": "render the list" },
              "filter": {
                "description": "filter on the list",
                "type": "string",
                "readOnly": false,
                "mandatory": false,
                "default": "{}"
              }
            },
            "o18b681c27f196a6": {
              "_id": "o18b681c27f196a6",
              "_name": "Book",
              "_description": "",
              "name": {
                "description": "name of a book",
                "type": "string",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "year": {
                "description": "year when the book was written",
                "type": "number",
                "readOnly": false,
                "mandatory": false,
                "default": 0
              },
              "author": {
                "description": "author of the book",
                "type": "Author",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              }
            },
            "z174c61a72c16e21": {
              "_id": "z174c61a72c16e21",
              "_name": "Author",
              "_description": "",
              "firstName": {
                "description": "first name of an author",
                "type": "string",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "lastName": {
                "description": "last name of an author",
                "type": "string",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "fullName": {
                "description": "full name of an author",
                "params": [],
                "result": "string"
              }
            }
          },
          "behaviors": {
            "r1e7a2121b21dd77": {
              "_id": "r1e7a2121b21dd77",
              "component": "k119f317c9d181db",
              "state": "start",
              "action": "function start() { \n  // add HTML\n  this.require('template').render();\n  \n  // add CSS\n  this.require('list.css').render();\n  \n  // init the filter\n  this.require('list').filter('');\n  \n  // show the list\n  this.require('list').render();\n  \n  // add listener\n  document.getElementById('search').addEventListener('keyup', function keyup(e) {\n    this.require('list').filter(e.target.value.trim());\n  }.bind(this));\n}",
              "useCoreAPI": false,
              "core": false
            },
            "n1ab81101b41b375": {
              "_id": "n1ab81101b41b375",
              "component": "Template",
              "state": "render",
              "action": "function render(elt) { \n  let html = this.source(),\n      domNode = elt;\n  \n  if (html) {\n    if (domNode === null) {\n      domNode = document.body;\n    }\n    \n    domNode.insertAdjacentHTML('beforeend', html);\n  }\n}",
              "useCoreAPI": false,
              "core": false
            },
            "g1725a1c65e1d149": {
              "_id": "g1725a1c65e1d149",
              "component": "CSS",
              "state": "render",
              "action": "function render() { \n  let div = document.createElement('style');\n  div.innerHTML = this.source();\n  document.head.appendChild(div);\n}",
              "useCoreAPI": false,
              "core": false
            },
            "k1d4551afd717da8": {
              "_id": "k1d4551afd717da8",
              "component": "List",
              "state": "render",
              "action": "function render() { \n  let items = [],\n      properties = {},\n      links = {},\n      html = '',\n      criteria = null,\n      table = document.getElementById('table');\n  \n  if (table) {\n  \n    // get data\n    if (this.filter().trim() !== '') {\n      criteria = new RegExp(this.filter().trim(), 'gi');\n      items = this.require('db').collections().Book.find({\n        name: criteria\n      });\n    } else {\n      items = this.require('db').collections().Book.find();\n    }\n    \n    properties = ['name', 'year'];\n    links = ['author'];\n    \n    html = '<tr>';\n    // build table header\n    properties.forEach(function(property) {\n      html = html + '<th scope=\"col\">' + property.toUpperCase() +'</th>'; \n    });\n    links.forEach(function (link) {\n      html = html + '<th scope=\"col\">' + link.toUpperCase() +'</th>'; \n    });\n    html = html + '<tr>';\n    \n    // build table body\n    items.forEach(function (item){\n      html = html + '<tr>';\n      \n      properties.forEach(function(property) {\n        html = html + '<td>' + item[property] + '</td>';\n      });\n      \n      links.forEach(function (link) {\n        const author = this.require(item[link]);\n        \n        if (author) {\n          html = html + '<td>' + author.fullName() + '</td>';\n        } else {\n          html = html + '<td></td>';\n        }\n      }.bind(this));\n      \n      html = html + '</tr>';\n    }.bind(this));\n    \n    html = html + '</table>';\n    \n    table.innerHTML = html;\n  }\n}",
              "useCoreAPI": false,
              "core": false
            },
            "w1d4ac1c9821d391": {
              "_id": "w1d4ac1c9821d391",
              "component": "List",
              "state": "filter",
              "action": "function filter(value) { \n\tthis.render();\n}",
              "useCoreAPI": false,
              "core": false
            },
            "a1a55019f6a116d1": {
              "_id": "a1a55019f6a116d1",
              "component": "Book",
              "state": "init",
              "action": "function init(conf) { \n  this.require('list').render();\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "s106991b9f112c56": {
              "_id": "s106991b9f112c56",
              "component": "Book",
              "state": "destroy",
              "action": "function destroy() { \n  this.require('list').render();\n\n  // destroy the component\n  $component.destroy(this.id());\n}",
              "useCoreAPI": true,
              "core": false
            },
            "o1d3ca175e51c17b": {
              "_id": "o1d3ca175e51c17b",
              "component": "Author",
              "state": "fullName",
              "action": "function fullName() { \n  let result = this.firstName() + ' ' + this.lastName();\n  return result;\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {
            "DOMElement": {
              "_id": "m14b771764815eca",
              "name": "DOMElement",
              "type": "object"
            }
          },
          "components": {
            "CSS": {
              "list.css": {
                "_id": "list.css",
                "source": "body {\n  padding-top: 50px;\n  font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif;\n}\n\n.input-group {\n  padding-bottom:20px;\n}\n\ntable {\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\ntd, th {\n  border: 1px solid #dddddd;\n  text-align: left;\n  padding: 8px;\n}\n\nth {\n  background-color: #e7e7e7;\n}"
              }
            },
            "Template": {
              "template": {
                "_id": "template",
                "source": "<div class=\"input-group\">\n  <input id=\"search\" type=\"text\" class=\"form-control\" placeholder=\"search for a book name\">\n</div>\n\n<table id=\"table\"></table>"
              }
            },
            "List": { "list": { "_id": "list", "filter": "" } },
            "Book": {
              "n193a61759c1003b": {
                "_id": "n193a61759c1003b",
                "author": "p183d91088f12f6a",
                "name": "The Three Musketeers",
                "year": 1844
              },
              "v1ff7018f18166da": {
                "_id": "v1ff7018f18166da",
                "author": "a1654216c6c11216",
                "name": "Twenty Thousand Leagues Under the Sea",
                "year": 1870
              },
              "g138f61067815e83": {
                "_id": "g138f61067815e83",
                "author": "r1ee7f1534e19b8b",
                "name": "The Little Prince",
                "year": 1943
              }
            },
            "Author": {
              "r1ee7f1534e19b8b": {
                "_id": "r1ee7f1534e19b8b",
                "firstName": "Antoine",
                "lastName": "De Saint-Exupéry"
              },
              "a1654216c6c11216": {
                "_id": "a1654216c6c11216",
                "firstName": "Jules",
                "lastName": "Verne"
              },
              "p183d91088f12f6a": {
                "_id": "p183d91088f12f6a",
                "firstName": "Alexandre",
                "lastName": "Dumas"
              }
            }
          },
          "_id": "k119f317c9d181db"
        }
      },
      "02-nodejs": {
        "_id": "02-nodejs",
        "platform": "electron",
        "source": {
          "name": "nodejs",
          "master": true,
          "version": "1.5.0",
          "description": "Create a server application\n\nThis example shows you how to create a Node.js application in System Designer.\n\nYou can the test the application directly in System Designer.",
          "schemas": {},
          "models": {},
          "behaviors": {
            "17d001e5ae12a44": {
              "_id": "17d001e5ae12a44",
              "component": "1638e12721115b5",
              "state": "start",
              "action": "function start() { \n  const http = require('http'),\n      logger = this.require('logger');\n\n  http.createServer(function (req, res) {\n    res.writeHead(200);\n    res.end('hello world\\n');\n  }).listen(1234);\n  \n  logger.info('server is running at http://127.0.0.1:1234');\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {},
          "components": {},
          "_id": "1638e12721115b5"
        }
      },
      "03-graph-system-example": {
        "_id": "03-graph-system-example",
        "platform": "all",
        "source": {
          "name": "graph-example",
          "master": true,
          "version": "1.0.0",
          "description": "Graph system example. \n\n\nnote: see the tutorials for more informations.",
          "schemas": {
            "q1fb6e179641acb7": {
              "_id": "q1fb6e179641acb7",
              "_name": "Nodes",
              "_inherit": ["_Component"]
            },
            "q1a868198e31bce7": {
              "_id": "q1a868198e31bce7",
              "_name": "Relationships",
              "_inherit": ["_Component"],
              "incoming": "link",
              "outgoing": "link"
            },
            "n1a88c10eff1beb6": {
              "_id": "n1a88c10eff1beb6",
              "_name": "Person",
              "_inherit": ["Nodes"],
              "name": "property",
              "age": "property"
            },
            "z1747d12e621e92f": {
              "_id": "z1747d12e621e92f",
              "_name": "IS_FRIEND_WITH",
              "_inherit": ["Relationships"],
              "since": "property"
            },
            "i15a3614c1e17109": {
              "_id": "i15a3614c1e17109",
              "_name": "HAS_READ",
              "_inherit": ["Relationships"],
              "date": "property",
              "rated": "property"
            },
            "i1d8501332c1c6bd": {
              "_id": "i1d8501332c1c6bd",
              "_name": "Book",
              "_inherit": ["Nodes"],
              "title": "property",
              "author": "property"
            }
          },
          "models": {
            "e143b513b801a48c": {
              "_id": "e143b513b801a48c",
              "_name": "Nodes",
              "_description": ""
            },
            "l1bf6210e8510013": {
              "_id": "l1bf6210e8510013",
              "_name": "Relationships",
              "_description": "",
              "incoming": {
                "description": "",
                "type": "Nodes",
                "kind": "normal",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "outgoing": {
                "description": "",
                "type": "Nodes",
                "kind": "normal",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              }
            },
            "m11c1515b7e12099": {
              "_id": "m11c1515b7e12099",
              "_name": "Person",
              "_description": "",
              "name": {
                "description": "",
                "type": "string",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "age": {
                "description": "",
                "type": "number",
                "readOnly": false,
                "mandatory": false,
                "default": 0
              }
            },
            "g19e531c5c819149": {
              "_id": "g19e531c5c819149",
              "_name": "IS_FRIEND_WITH",
              "_description": "",
              "since": {
                "description": "",
                "type": "date",
                "readOnly": false,
                "mandatory": false,
                "default": "1970-01-01T00:00:00.000Z"
              },
              "incoming": {
                "description": "",
                "type": "Person",
                "kind": "normal",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "outgoing": {
                "description": "",
                "type": "Person",
                "kind": "normal",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              }
            },
            "d11f871f899154fd": {
              "_id": "d11f871f899154fd",
              "_name": "HAS_READ",
              "_description": "",
              "date": {
                "description": "",
                "type": "date",
                "readOnly": false,
                "mandatory": false,
                "default": "1970-01-01T00:00:00.000Z"
              },
              "rated": {
                "description": "",
                "type": "number",
                "readOnly": false,
                "mandatory": false,
                "default": 0
              },
              "incoming": {
                "description": "",
                "type": "Person",
                "kind": "normal",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "outgoing": {
                "description": "",
                "type": "Book",
                "kind": "normal",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              }
            },
            "y12eff155c715742": {
              "_id": "y12eff155c715742",
              "_name": "Book",
              "_description": "",
              "title": {
                "description": "",
                "type": "string",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "author": {
                "description": "",
                "type": "string",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              }
            }
          },
          "behaviors": {
            "k191b51f33413bc3": {
              "_id": "k191b51f33413bc3",
              "component": "c14393197831b99d",
              "state": "start",
              "action": "function start() { \n  // show the number of person that have read the book GraphDatabase\n  this.require('logger').info(\n    this.require('db').collections().HAS_READ.find({\n      'outgoing': {\n        '$eq': 'GraphDatabase'\n      }\n    }).length\n  );\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {},
          "components": {
            "Person": {
              "sally": { "_id": "sally", "age": 32, "name": "Sally" },
              "john": { "_id": "john", "age": 27, "name": "John" }
            },
            "IS_FRIEND_WITH": {
              "i1c36e1b6331b0f6": {
                "_id": "i1c36e1b6331b0f6",
                "incoming": "john",
                "outgoing": "sally",
                "since": "2013-01-09T00:00:00.000Z"
              }
            },
            "HAS_READ": {
              "k132a8124351e768": {
                "_id": "k132a8124351e768",
                "date": "2013-02-03T00:00:00.000Z",
                "incoming": "john",
                "outgoing": "GraphDatabase",
                "rated": 5
              },
              "s146f0142a518868": {
                "_id": "s146f0142a518868",
                "date": "2013-09-02T00:00:00.000Z",
                "incoming": "sally",
                "outgoing": "GraphDatabase",
                "rated": 4
              }
            },
            "Book": {
              "GraphDatabase": {
                "_id": "GraphDatabase",
                "author": "Jim Webber, Ian Robinson",
                "title": "Graph Database"
              }
            }
          },
          "_id": "c14393197831b99d"
        }
      },
      "04-create-graph-system": {
        "_id": "04-create-graph-system",
        "platform": "all",
        "source": {
          "name": "graph-system",
          "master": true,
          "version": "1.1.0",
          "description": "Create a Graph system.\n\nCreate a Graph system with models that inherit from Nodes and Relationships models.\n\n\nnote: see the tutorials for more informations.",
          "schemas": {
            "q1fb6e179641acb7": {
              "_id": "q1fb6e179641acb7",
              "_name": "Nodes",
              "_inherit": ["_Component"]
            },
            "q1a868198e31bce7": {
              "_id": "q1a868198e31bce7",
              "_name": "Relationships",
              "_inherit": ["_Component"],
              "incoming": "link",
              "outgoing": "link"
            }
          },
          "models": {
            "e143b513b801a48c": {
              "_id": "e143b513b801a48c",
              "_name": "Nodes",
              "_description": ""
            },
            "l1bf6210e8510013": {
              "_id": "l1bf6210e8510013",
              "_name": "Relationships",
              "_description": "",
              "incoming": {
                "description": "Nodes component that starts the relationship",
                "type": "Nodes",
                "kind": "normal",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "outgoing": {
                "description": "Nodes component that ends the relationship",
                "type": "Nodes",
                "kind": "normal",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              }
            }
          },
          "behaviors": {
            "k191b51f33413bc3": {
              "_id": "k191b51f33413bc3",
              "component": "c14393197831b88d",
              "state": "start",
              "action": "function start() { \n  \n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {},
          "components": {},
          "_id": "c14393197831b88d"
        }
      },
      "06-create-extension.json": {
        "_id": "06-create-extension.json",
        "platform": "all",
        "source": {
          "name": "extension-template",
          "master": false,
          "version": "1.5.0",
          "description": "Create an extension\n\nExtension for creating:\n\n* toolbar items,\n* actions when clicking on them and\n* show modal dialog.\n\n\nnote: see the tutorials for more informations.",
          "schemas": {
            "p181111d5c01f97b": {
              "_id": "p181111d5c01f97b",
              "_inherit": ["_Component"],
              "_name": "HTML",
              "render": "method",
              "source": "property"
            },
            "t19b6b11ff31158d": {
              "_id": "t19b6b11ff31158d",
              "_name": "ToolBarItem",
              "_inherit": ["_Component"],
              "html": "link",
              "position": "property",
              "type": "property",
              "platform": "property",
              "render": "method",
              "click": "event"
            },
            "l1cbdc1fc4612ece": {
              "_id": "l1cbdc1fc4612ece",
              "_name": "Modal",
              "_inherit": ["_Component"],
              "title": "property",
              "message": "property",
              "html": "link",
              "ok": "event",
              "cancel": "event",
              "show": "method",
              "hide": "method",
              "render": "method"
            }
          },
          "models": {
            "w1417e1d6d613a0d": {
              "_id": "w1417e1d6d613a0d",
              "_name": "HTML",
              "source": {
                "description": "HTML of the component",
                "type": "html",
                "readOnly": true,
                "mandatory": true,
                "default": ""
              },
              "render": {
                "description": "render the component",
                "params": [
                  {
                    "name": "id",
                    "type": "any",
                    "mandatory": false,
                    "default": null
                  }
                ]
              }
            },
            "u1f4c7177bb1a459": {
              "_id": "u1f4c7177bb1a459",
              "_name": "ToolBarItem",
              "html": {
                "description": "HTML the toolbar item",
                "type": "HTML",
                "readOnly": false,
                "mandatory": false,
                "default": "toolbar-item-template.html"
              },
              "position": {
                "description": "position of the toolbar item in the toolbar",
                "type": "number",
                "readOnly": false,
                "mandatory": false,
                "default": 70
              },
              "type": {
                "description": "on which context to display the toolbar item",
                "type": "editorType",
                "readOnly": false,
                "mandatory": false,
                "default": "designer"
              },
              "render": { "description": "render the toolbar item" },
              "click": { "description": "click on the toolbar item" },
              "platform": {
                "description": "on which platform to display the toolbar item",
                "type": "platform",
                "readOnly": false,
                "mandatory": false,
                "default": "all"
              }
            },
            "q1d12b19f4712a7a": {
              "_id": "q1d12b19f4712a7a",
              "_name": "Modal",
              "title": {
                "description": "title of the modal",
                "type": "text",
                "readOnly": true,
                "mandatory": false,
                "default": ""
              },
              "message": {
                "description": "message to display",
                "type": "text",
                "readOnly": true,
                "mandatory": false,
                "default": ""
              },
              "html": {
                "description": "HTML of the modal",
                "type": "HTML",
                "readOnly": false,
                "mandatory": false,
                "default": "modal-template.html"
              },
              "show": { "description": "show the modal" },
              "hide": { "description": "hide the modal" },
              "cancel": {
                "description": "click on the 'Cancel' button of the modal"
              },
              "ok": { "description": "click on the 'OK' button of the modal" },
              "render": { "description": "render the modal" }
            }
          },
          "behaviors": {
            "g10c63191dc16341": {
              "_id": "g10c63191dc16341",
              "component": "toolbar-item-template",
              "state": "click",
              "action": "function click() { \n  $('#designer-toolbar-item-template').tooltip('hide');\n  this.require('modal-template').render();\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "d1bdde1f59f1befe": {
              "_id": "d1bdde1f59f1befe",
              "component": "Modal",
              "state": "show",
              "action": "function show() { \n  const id = this.html().id().replace('.html', '');\n  $('#' + id).modal('show');\n}",
              "useCoreAPI": false,
              "core": false
            },
            "n1467b1097a16481": {
              "_id": "n1467b1097a16481",
              "component": "Modal",
              "state": "hide",
              "action": "function hide() { \n  const id = this.html().id().replace('.html', '');\n  $('#' + id).modal('hide');\n}",
              "useCoreAPI": false,
              "core": false
            },
            "t1fb0b150c810528": {
              "_id": "t1fb0b150c810528",
              "component": "Modal",
              "state": "render",
              "action": "function render() { \n  let html = '',\n      dom = null,\n      templateId = this.html().id(),\n      id = templateId.replace('.html', '');\n\n  // empty area\n  $('#designer-dialog').empty();\n\n  // render\n  html = this.html();\n  document.querySelector('#designer-dialog').insertAdjacentHTML('afterbegin',\n    html.source()\n      .replace(/{{title}}/gi, this.title())\n      .replace(/{{message}}/gi, this.message())\n  );\n\n  // modal events\n  dom = document.getElementById(id + '-cancel');\n  dom.addEventListener('click', function click(event) {\n    this.cancel();\n  }.bind(this));\n  \n  dom = document.getElementById(id + '-ok');\n  dom.addEventListener('click', function click(event) {\n    this.ok();\n  }.bind(this));\t\t\n  \n  // show modal\n  $('#' + id).modal('show');\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "w1cffe198cb19e9c": {
              "_id": "w1cffe198cb19e9c",
              "component": "modal-template",
              "state": "cancel",
              "action": "function cancel() { \n  this.hide();\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "c1bee91492f11173": {
              "_id": "c1bee91492f11173",
              "component": "modal-template",
              "state": "ok",
              "action": "function ok() { \n  this.hide();\t\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {
            "editorType": {
              "name": "editorType",
              "type": "string",
              "value": [
                "designer",
                "system",
                "type",
                "schema",
                "model",
                "behavior",
                "component"
              ]
            },
            "platform": {
              "_id": "r10214160211309c",
              "name": "platform",
              "type": "string",
              "value": ["all", "web", "electron", "cordova"]
            }
          },
          "components": {
            "ToolBarItem": {
              "toolbar-item-template": {
                "_id": "toolbar-item-template",
                "html": "toolbar-item-template.html",
                "platform": "all",
                "position": 70,
                "type": "designer"
              }
            },
            "HTML": {
              "toolbar-item-template.html": {
                "_id": "toolbar-item-template.html",
                "source": "<button type=\"button\" id=\"designer-toolbar-item-template\" class=\"btn btn-default btn-lg\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Template\">\n  <span class=\"glyphicon glyphicon-star\" aria-hidden=\"true\"></span>\n</button>"
              },
              "modal-template.html": {
                "_id": "modal-template.html",
                "source": "<div class=\"modal fade\" id=\"modal-template\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLabel\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modalLabel\">{{title}}</h4>\n      </div>\n      <div class=\"modal-body\">\n        {{message}}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" id=\"modal-template-cancel\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" id=\"modal-template-ok\">OK</button>\n      </div>\n    </div>\n  </div>\n</div>"
              }
            },
            "Modal": {
              "modal-template": {
                "_id": "modal-template",
                "message": "This is a template of a modal dialog.",
                "title": "An example of modal dialog",
                "html": "modal-template.html"
              }
            }
          },
          "_id": "h1ffb312ef619349"
        }
      },
      "07-listen-collection-events.json": {
        "_id": "07-listen-collection-events.json",
        "source": {
          "name": "listen-collection-events",
          "master": true,
          "version": "1.5.0",
          "description": "Listen to components collection events\n\nSystem Runtime NoSQL Database is an instance of '_Database' class that sends insert, update and remove events for each collection of the database.\n\nYou can listen to all these events to perform the action you want.\n\nnote: events are send for the collections (i.e. schemas) you have created but also for the private collections of the database.\n\n\nnote: see the tutorials for more informations.",
          "schemas": {
            "1723516a30132ac": {
              "_id": "1723516a30132ac",
              "_name": "_Database",
              "_inherit": ["_Component"],
              "_core": true,
              "insert": "event",
              "update": "event",
              "remove": "event"
            }
          },
          "models": {
            "13b4415f6511c15": {
              "_id": "13b4415f6511c15",
              "_name": "_Database",
              "_core": true,
              "insert": {
                "description": "event send when a document is inserted in a collection",
                "params": [{ "name": "event", "type": "dbInsertEvent" }]
              },
              "update": {
                "description": "event send when a document is updated in a collection",
                "params": [{ "name": "event", "type": "dbUpdateEvent" }]
              },
              "remove": {
                "description": "event send when a document is removed from a collection",
                "params": [{ "name": "event", "type": "dbRemoveEvent" }]
              }
            }
          },
          "behaviors": {
            "1de8c154bb18a01": {
              "_id": "1de8c154bb18a01",
              "component": "_Database",
              "state": "insert",
              "action": "function insert(event) { \n  // always filter on the schema you want\n  if (event.collection === '') {\n    \n  }\t\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "173ff13cde1c29e": {
              "_id": "173ff13cde1c29e",
              "component": "_Database",
              "state": "remove",
              "action": "function remove(event) { \n  // always filter on the schema you want\n  if (event.collection === '') {\n    \n  }\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "1e0a71b78c1fd0e": {
              "_id": "1e0a71b78c1fd0e",
              "component": "_Database",
              "state": "update",
              "action": "function update(event) { \n  // always filter on the schema you want\n  if (event.collection === '') {\n    \n  }\t\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {
            "dbUpdateEvent": {
              "_id": "1f5c41309711752",
              "name": "dbUpdateEvent",
              "type": "object",
              "schema": {
                "collection": {
                  "description": "id of the collection where a document has been updated",
                  "type": "string",
                  "mandatory": true,
                  "default": ""
                },
                "id": {
                  "description": "id of the document that has been updated",
                  "type": "string",
                  "mandatory": true,
                  "default": ""
                },
                "field": {
                  "description": "field of the document that has been updated",
                  "type": "string",
                  "mandatory": true,
                  "default": ""
                },
                "value": {
                  "description": "value of the field of the document that has been updated",
                  "type": "any",
                  "mandatory": true,
                  "default": null
                }
              }
            },
            "dbRemoveEvent": {
              "_id": "1952e1ac4213f4a",
              "name": "dbRemoveEvent",
              "type": "object",
              "schema": {
                "collection": {
                  "description": "id of the collection where a document has been removed",
                  "type": "string",
                  "mandatory": true,
                  "default": ""
                },
                "id": {
                  "description": "id of the document that has been removed",
                  "type": "string",
                  "mandatory": true,
                  "default": ""
                }
              }
            },
            "dbInsertEvent": {
              "_id": "148ef1e19810e6d",
              "name": "dbInsertEvent",
              "type": "object",
              "schema": {
                "collection": {
                  "description": "id of the collection where a document has been inserted",
                  "type": "string",
                  "mandatory": true,
                  "default": ""
                },
                "document": {
                  "description": "document that has been inserted",
                  "type": "object",
                  "mandatory": true,
                  "default": {}
                }
              }
            }
          },
          "components": {},
          "_id": "1d4431844018720"
        },
        "platform": "all"
      },
      "05-send-messages.json": {
        "_id": "05-send-messages.json",
        "source": {
          "name": "send-messages",
          "master": true,
          "version": "1.5.0",
          "description": "Send messages through a channel\n\n\nYou can send messages into the current system or from one system to another system with channels. To do that:\n\n1. Define an event in '_Channel' schema and model.\n2. To listen to the message, just add a behavior to the event.\n3. To send a message: this.require('channel').myevent(param1, param2, ...).\n\n\nnote: see the tutorials for more informations.",
          "schemas": {
            "104ad1f48518376": {
              "_id": "104ad1f48518376",
              "_name": "_Channel",
              "_inherit": ["_Component"],
              "send": "event"
            }
          },
          "models": {
            "135c71078810af2": {
              "_id": "135c71078810af2",
              "_name": "_Channel",
              "send": {
                "description": "send a message",
                "params": [{ "name": "message", "type": "message" }]
              }
            }
          },
          "behaviors": {
            "1ae8e11ece1a658": {
              "_id": "1ae8e11ece1a658",
              "component": "_Channel",
              "state": "send",
              "action": "function send(message) { \n\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {
            "message": {
              "name": "message",
              "type": "object",
              "schema": {
                "event": {
                  "description": "name of the event",
                  "type": "string",
                  "mandatory": true
                },
                "from": {
                  "description": "id of the system",
                  "type": "string",
                  "mandatory": false
                },
                "data": {
                  "description": "arguments send to the event",
                  "type": "array",
                  "mandatory": true
                }
              },
              "core": true
            }
          },
          "components": { "_Channel": { "channel": { "_id": "channel" } } },
          "_id": "12eaf148b211195"
        },
        "platform": "all"
      }
    }
  },
  "_id": "p146a5167591a801"
}
