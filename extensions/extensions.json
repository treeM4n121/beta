{
  "name": "extensions",
  "master": false,
  "version": "1.0.0",
  "description": "",
  "schemas": {
    "x15866118f7110a3": {
      "_id": "x15866118f7110a3",
      "_name": "Extension",
      "_inherit": ["_Component"],
      "source": "property",
      "isCore": "property",
      "installed": "property"
    }
  },
  "models": {
    "h19261129ee12d64": {
      "_id": "h19261129ee12d64",
      "_name": "Extension",
      "source": {
        "type": "json",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "installed": {
        "type": "boolean",
        "readOnly": false,
        "mandatory": false,
        "default": false
      },
      "isCore": {
        "type": "boolean",
        "readOnly": false,
        "mandatory": false,
        "default": true
      }
    }
  },
  "behaviors": {},
  "types": {},
  "components": {
    "Extension": {
      "w15b291d1a312ff6": {
        "_id": "w15b291d1a312ff6",
        "installed": false,
        "isCore": true,
        "source": {
          "name": "extension-model-json",
          "master": false,
          "version": "1.5.0",
          "description": "Create a model from a JSON file",
          "schemas": {
            "p181111d5c01f97b": {
              "_id": "p181111d5c01f97b",
              "_inherit": ["_Component"],
              "_name": "HTML",
              "render": "method",
              "source": "property"
            },
            "t19b6b11ff31158d": {
              "_id": "t19b6b11ff31158d",
              "_name": "ToolBarItem",
              "_inherit": ["_Component"],
              "html": "link",
              "position": "property",
              "type": "property",
              "platform": "property",
              "render": "method",
              "click": "event"
            },
            "l1cbdc1fc4612ece": {
              "_id": "l1cbdc1fc4612ece",
              "_name": "Modal",
              "_inherit": ["_Component"],
              "title": "property",
              "message": "property",
              "html": "link",
              "ok": "event",
              "cancel": "event",
              "show": "method",
              "hide": "method",
              "render": "method"
            }
          },
          "models": {
            "w1417e1d6d613a0d": {
              "_id": "w1417e1d6d613a0d",
              "_name": "HTML",
              "source": {
                "type": "html",
                "readOnly": true,
                "mandatory": true,
                "default": ""
              },
              "render": {
                "params": [
                  {
                    "name": "id",
                    "type": "any",
                    "mandatory": false,
                    "default": null
                  }
                ]
              }
            },
            "u1f4c7177bb1a459": {
              "_id": "u1f4c7177bb1a459",
              "_name": "ToolBarItem",
              "html": {
                "type": "HTML",
                "readOnly": false,
                "mandatory": false,
                "default": "toolbar-item-template.html"
              },
              "position": {
                "type": "number",
                "readOnly": false,
                "mandatory": false,
                "default": 100
              },
              "type": {
                "type": "editorType",
                "readOnly": false,
                "mandatory": false,
                "default": "designer"
              },
              "render": {},
              "click": {},
              "platform": {
                "type": "platform",
                "readOnly": false,
                "mandatory": false,
                "default": "all"
              }
            },
            "q1d12b19f4712a7a": {
              "_id": "q1d12b19f4712a7a",
              "_name": "Modal",
              "title": {
                "type": "text",
                "readOnly": true,
                "mandatory": false,
                "default": ""
              },
              "message": {
                "type": "text",
                "readOnly": true,
                "mandatory": false,
                "default": ""
              },
              "html": {
                "type": "HTML",
                "readOnly": false,
                "mandatory": false,
                "default": "modal-template.html"
              },
              "show": {},
              "hide": {},
              "cancel": {},
              "ok": {},
              "render": {}
            }
          },
          "behaviors": {
            "z1f6731cf3219889": {
              "_id": "z1f6731cf3219889",
              "component": "x10b021de0a19b46",
              "state": "click",
              "action": "function click() { \n  $('#designer-toolbar-item-model-json').tooltip('hide');\n  \n  if (this.require('factory').system()) {\n    this.require('j16a581f46813de3').render();\n  } else {\n    this.require('message').warning('There is no system');\n  } \n}",
              "useCoreAPI": false,
              "core": false
            },
            "v19bb01b70a1a51c": {
              "_id": "v19bb01b70a1a51c",
              "component": "j16a581f46813de3",
              "state": "ok",
              "action": "function ok() {\n  var name = $('#modal-modeljson-name').val(),\n    jsonText = $('#modal-modeljson-json').val(),\n    json = null,\n    schema = {},\n    model = {},\n    property = '',\n    type = '',\n    typeName = '',\n    arrayType = '',\n    that = this,\n    createdTypes = [];\n\n  function _cleanName(name) {\n    var cleanedName = name.replace(/\\-/gi,'_');\n    \n    if (name && '0123456789'.indexOf(name[0]) !== -1) { \n      cleanedName = '_' + cleanedName; \n    }\n    \n    return cleanedName;\n  }\n\n  function _mergeItems(arr) {\n    var result = {};\n\n    arr.forEach(function forEach(item) {\n      var copyItem = {},\n          prop = '',\n          subprop = '';\n\n      for (prop in item) {\n        switch (_getType(item[prop])) {\n          case 'object':\n            for (subprop in item[prop]) {\n              if (typeof result[prop] === 'undefined') {\n                result[prop] = {};\n              }\n              result[prop][subprop] = item[prop][subprop];\n            }\n            break;\n          case 'array':\n            if (typeof result[prop]  === 'undefined') {\n              result[prop] = [];\n            }\n            item[prop].forEach(function (val) {\n              result[prop].push(val);\n            });\n            break;\n          default:\n            result[prop] = item[prop];\n            break;\n        }\n      }\n    });\n\n    return result;\n  }\n\n  function _getTypeName(parent, name) {\n    var result = '';\n    \n    if (!_validType(name)) {\n      result = _cleanName(name) + '_' + Math.floor(Math.random() * 11);\n    } else {\n      result = _cleanName(name);\n    }\n\n    return result;\n  }\n\n  function _getType(value) {\n    var type = '';\n\n    if (Array.isArray(value)) {\n      type = 'array';\n    } else {\n      type = typeof value;\n    }\n\n    return type;\n  }\n\n  function _validName(name) {\n    var result = true,\n      id = '';\n\n    for (id in that.require('factory').system().schemas()) {\n      if (that.require('factory').system().schemas()[id]._name === name) {\n        result = false;\n        break;\n      }\n    }\n\n    if (that.require('factory').system().name() === name) {\n      result = false;\n    }\n\n    return result;\n  }\n\n  // comment the code \n  // to have less types\n  // but possible type collisions\n  function _validType(name) {\n    var result = true,\n      id = '';\n\n    for (id in that.require('factory').system().types()) {\n      if (that.require('factory').system().types()[id].name === name) {\n        result = false;\n        break;\n      }\n    }\n\n    if (createdTypes.indexOf(name) !== -1) {\n      result = false;\n    }\n    \n\n    return result;\n  }\n\n  function _createTypeFromObject(parent, name, obj) {\n    var typeDef = '',\n      property = '',\n      type = '',\n      typeName = '',\n      arrayType = '',\n      cleanProperty = '';\n\n    typeName = _getTypeName(parent, name);\n    typeDef = that.require('factory').addType(typeName, false);\n    createdTypes.push(typeName);\n\n    typeDef.schema = {};\n    that.require('designer').save();\n\n    for (property in obj) {\n      //if (property.indexOf('_') !== 0) {\n      type = _getType(obj[property]);\n      cleanProperty = _cleanName(property);\n      switch (type) {\n        case 'object':\n          typeDef.schema[cleanProperty] = {};\n          typeDef.schema[cleanProperty].type = _createTypeFromObject(name, property, obj[property]);\n          typeDef.schema[cleanProperty].mandatory = false;\n          typeDef.schema[cleanProperty].default = {};\n          break;\n        case 'number':\n          typeDef.schema[cleanProperty] = {};\n          typeDef.schema[cleanProperty].type = 'number';\n          typeDef.schema[cleanProperty].mandatory = false;\n          typeDef.schema[cleanProperty].default = 0;\n          break;\n        case 'boolean':\n          typeDef.schema[cleanProperty] = {};\n          typeDef.schema[cleanProperty].type = 'boolean';\n          typeDef.schema[cleanProperty].mandatory = false;\n          typeDef.schema[cleanProperty].default = false;\n          break;\n        case 'array':\n          typeDef.schema[cleanProperty] = {};\n          typeDef.schema[cleanProperty].mandatory = false;\n          if (typeof obj[property][0] !== 'undefined') {\n            arrayType = _getType(obj[property][0]);\n\n            if (arrayType === 'object') {\n              if (obj[property][0] !== null) {\n                typeDef.schema[cleanProperty].type = [_createTypeFromObject(name, property, _mergeItems(obj[property]))];\n                typeDef.schema[cleanProperty].default = [];\n              } else {\n                typeDef.schema[cleanProperty].type = ['object'];\n                typeDef.schema[cleanProperty].default = [];\n              }\n            } else {\n              typeDef.schema[cleanProperty].type = [arrayType];\n              typeDef.schema[cleanProperty].default = [];\n            }\n          } else {\n            typeDef.schema[cleanProperty].type = ['any'];\n            typeDef.schema[cleanProperty].default = [];\n          }\n          break;\n        default:\n          typeDef.schema[cleanProperty] = {};\n          typeDef.schema[cleanProperty].type = 'string';\n          typeDef.schema[cleanProperty].mandatory = false;\n          typeDef.schema[cleanProperty].default = '';\n          break;\n      }\n      //}\n    }\n    that.require('factory').updateType(typeName, typeDef);\n    that.require('designer').save();\n\n    return typeName;\n  }\n\n  // clean name\n  name = name.replace(/\\s|\\t/gi, '_').replace(/[\\-\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\`\\{\\|\\}\\~]/gi, '');\n\n  if (name && _validName(name) && jsonText) {\n    try {\n      json = JSON.parse(jsonText);\n      if (json) {\n        // schema\n        schema = this.require('factory').addSchema(name.trim());\n\n        schema._inherit = [];\n        this.require('factory').updateSchema(schema._id, schema);\n\n        this.require('designer').save();\n\n        for (property in json) {\n          if (property.indexOf('_') !== 0) {\n            type = _getType(json[property]);\n            if (type === 'array') {\n              schema[property] = 'collection';\n            } else {\n              schema[property] = 'property';\n            }\n          }\n        }\n\n        this.require('factory').updateSchema(schema._id, schema);\n        this.require('designer').save();\n\n        // model\n        model = this.require('factory').createModel(schema);\n        this.require('designer').save();\n\n        for (property in schema) {\n          if (property.indexOf('_') !== 0) {\n            type = _getType(json[property]);\n            switch (type) {\n              case 'object':\n                if (json[property] !== null) {\n                  model[property].type = _createTypeFromObject('', property, json[property]);\n                  model[property].default = {};\n                } else {\n                  model[property].type = 'object';\n                  model[property].default = {};\n                }\n                break;\n              case 'number':\n                model[property].type = 'number';\n                model[property].default = 0;\n                break;\n              case 'boolean':\n                model[property].type = 'boolean';\n                model[property].default = false;\n                break;\n              case 'array':\n                if (typeof json[property][0] !== 'undefined') {\n                  arrayType = _getType(json[property][0]);\n                  if (arrayType === 'object') {\n                    if (json[property][0] !== null) {\n                      model[property].type = [_createTypeFromObject('', property, _mergeItems(json[property]))];\n                      model[property].default = [];\n                    } else {\n                      model[property].type = ['object'];\n                      model[property].default = [];\n                    }\n                  } else {\n                    model[property].type = [arrayType];\n                    model[property].default = [];\n                  }\n                } else {\n                  model[property].type = ['any'];\n                  model[property].default = [];\n                }\n                break;\n              case 'string':\n                model[property].type = 'string';\n                model[property].default = '';\n                break;\n              default:\n                break;\n            }\n          }\n        }\n\n        this.require('factory').updateModel(model._id, model);\n        this.require('designer').save();\n\n        this.require('channel').$designerCreateSchema(name, schema);\n\n        this.hide();\n\n        this.require('spaces').render();\n        this.require('workspace').render();\n\n        this.require('message').success('A model has been created for the JSON.');\n      }\n    } catch (e) {\n      this.hide();\n      this.require('message').warning('Can not create the model: the JSON is invalid.');\n    }\n  }\n}",
              "useCoreAPI": false,
              "core": false
            },
            "h19d481534915d09": {
              "_id": "h19d481534915d09",
              "component": "j16a581f46813de3",
              "state": "render",
              "action": "function render() { \n  var dom = null;\n  \n  this.require('Modal').render(this);\t\n  \n  $('#modal-modeljson').on('shown.bs.modal', function modal() {\n    $('#modal-modeljson-name').focus();\n  });\n  \n  // events\n  dom = document.getElementById('modal-modeljson-name');\n  dom.addEventListener('keyup', function keyup(event) {\n    if (event.keyCode === 13) {\n      event.stopPropagation();\n      event.preventDefault();\n      if ($('#modal-modeljson-name').val()) {\n        this.ok();\n      }\n      return false;\n    }\n  }.bind(this));\n  \n  dom = document.getElementById('modal-modeljson-json');\n  dom.addEventListener('keyup', function keyup(event) {\n    if (event.keyCode === 13) {\n      event.stopPropagation();\n      event.preventDefault();\n      if ($('#modal-modeljson-json').val()) {\n        this.ok();\n      }\n      return false;\n    }\n  }.bind(this));\n}",
              "useCoreAPI": false,
              "core": false
            },
            "h1f7551398814e9b": {
              "_id": "h1f7551398814e9b",
              "component": "j16a581f46813de3",
              "state": "cancel",
              "action": "function cancel() { \n  this.hide();\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "v16701182a014b42": {
              "_id": "v16701182a014b42",
              "component": "Modal",
              "state": "render",
              "action": "function render() { \n  var html = '',\n      dom = null,\n      templateId = this.html().id(),\n      id = templateId.replace('.html', '');\n\n  // empty area\n  $('#designer-dialog').empty();\n\n  // render\n  html = this.html();\n  document.querySelector('#designer-dialog').insertAdjacentHTML('afterbegin',\n    html.source()\n      .replace(/{{title}}/gi, this.title())\n      .replace(/{{message}}/gi, this.message())\n  );\n\n  // modal events\n  dom = document.getElementById(id + '-cancel');\n  dom.addEventListener('click', function click(event) {\n    this.cancel();\n  }.bind(this));\n  \n  dom = document.getElementById(id + '-ok');\n  dom.addEventListener('click', function click(event) {\n    this.ok();\n  }.bind(this));\t\t\n  \n  // show modal\n  $('#' + id).modal('show');\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "x1902b11a0a1b7d8": {
              "_id": "x1902b11a0a1b7d8",
              "component": "Modal",
              "state": "hide",
              "action": "function hide() { \n  var id = this.html().id().replace('.html', '');\n  $('#' + id).modal('hide');\n}",
              "useCoreAPI": false,
              "core": false
            },
            "x16db81674e14726": {
              "_id": "x16db81674e14726",
              "component": "Modal",
              "state": "show",
              "action": "function show() { \n  var id = this.html().id().replace('.html', '');\n  $('#' + id).modal('show');\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {
            "editorType": {
              "name": "editorType",
              "type": "string",
              "value": [
                "designer",
                "system",
                "type",
                "schema",
                "model",
                "behavior",
                "component"
              ]
            },
            "platform": {
              "_id": "r10214160211309c",
              "name": "platform",
              "type": "string",
              "value": ["all", "web", "electron", "cordova"]
            }
          },
          "components": {
            "ToolBarItem": {
              "x10b021de0a19b46": {
                "_id": "x10b021de0a19b46",
                "html": "toolbar-item-modeljson.html",
                "platform": "all",
                "position": 68,
                "type": "designer"
              }
            },
            "HTML": {
              "modal-modeljson.html": {
                "_id": "modal-modeljson.html",
                "source": "<div class=\"modal fade\" id=\"modal-modeljson\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLabel\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modalLabel\">{{title}}</h4>\n      </div>\n      <div class=\"modal-body\">\n        <form class=\"form-horizontal\" role=\"form\">\n          <div class=\"form-group\">\n            <label class=\"col-xs-offset-0 col-xs-2 control-label\">Name</label>\n            <div class=\"col-xs-offset-0 col-xs-9\">\n              <input class=\"form-control\" placeholder=\"give a name to your model\" type=\"text\" id=\"modal-modeljson-name\">\n            </div>\n          </div>\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label class=\"col-xs-offset-0 col-xs-2 control-label\">JSON</label>\n\t\t\t\t\t\t<div class=\"col-xs-offset-0 col-xs-9\">\n\t\t\t\t\t\t\t<textarea class=\"form-control\" placeholder=\"put your JSON here\" rows=\"6\" id=\"modal-modeljson-json\"></textarea>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\t\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" id=\"modal-modeljson-cancel\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" id=\"modal-modeljson-ok\">OK</button>\n      </div>\n    </div>\n  </div>\n</div>"
              },
              "toolbar-item-modeljson.html": {
                "_id": "toolbar-item-modeljson.html",
                "source": "<button type=\"button\" id=\"designer-toolbar-item-model-json\" class=\"btn btn-default btn-lg\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Create a model from JSON\">\n  <span class=\"glyphicon glyphicon-unchecked\" aria-hidden=\"true\"></span>\n</button>"
              }
            },
            "Modal": {
              "j16a581f46813de3": {
                "_id": "j16a581f46813de3",
                "html": "modal-modeljson.html",
                "message": "",
                "title": "Create a model from JSON"
              }
            }
          },
          "_id": "u155371124418bea"
        }
      }
    }
  },
  "_id": "a17fd51fe2d145a7"
}
